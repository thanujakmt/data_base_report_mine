
# name: Python application

# on:
#   schedule:
#     - cron: "30 3 * * *"  # 9:00 AM IST

# permissions:
#   contents: read

# env:
#   TZ: "Asia/Kolkata"

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Run main script
#       run: |
#         python niche_report_generator.py

name: Python application

on:
  schedule:
    - cron: "30 3 * * *"  # 9:00 AM IST

permissions:
  contents: read

env:
  TZ: "Asia/Kolkata"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install each dependency individually to ensure they are installed correctly
        pip install flake8 pytest mysql-connector-python secure-smtplib==0.1.1 pandas lxml openpyxl
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Verify dependencies
      run: |
        python -c "import pandas; print('Pandas version:', pandas.__version__)"
        python -c "import lxml; print('lxml version:', lxml.__version__)"
        python -c "import mysql.connector; print('mysql.connector available')"
        python -c "import secure_smtplib; print('secure-smtplib available')"
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run main script
      run: |
        python niche_report_generator.py
